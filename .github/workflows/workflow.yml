name: Node.js deploy
on:
  push:
    branches: ["main"]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - run: npm install --legacy-peer-deps
      - run: mkdir -p ~/.ssh && echo "${{ secrets.ACCESS_GITHUB_SSH }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && ls -al ~/.ssh && eval "$(ssh-agent -s)" && ssh-add ~/.ssh/id_rsa && ssh-add ~/.ssh/id_rsa
      - run: git clone git@github.com:edmooliveira29/backend-system.git
      - run: cd backend-system
      - run: echo "${{ secrets.ENV_BACKEND }}" > ./.env
      - run: npm install --legacy-peer-deps
      - name: Create mongo Docker container
        uses: DigiPie/mongo-action@v2.0.1
        with:
          image_version: latest
          port: 27017
      - name: Install mongosh command
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
      - run: npm run start-test & sleep 15
      - run: cd .. && npm run tests-e2e
  deploy:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: "./build"
          production-branch: main
          github-token: ${{ secrets.NETLIFY_GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
